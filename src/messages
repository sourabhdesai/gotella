/**
Convenience Class to Marshall and Unmarshall received Description Headers
*/
package payloads

import (
	"../ipaddr"
	"fmt"
)

type DescHeader struct {
	DescID      [16]byte
	PayloadDesc byte
	TTL         byte
	Hops        byte
	PayloadLen  [4]byte
}

func parse(rawHeader []byte, descHeader *DescHeader) error {
	if len(rawHeader) != 23 {
		return fmt.Errorf("input must be of length 23. Actual length == %d", len(rawHeader))
	}
	// Copy contents into member variables
	copy(descHeader.DescID[:], rawHeader[:16])
	descHeader.PayloadDesc = rawHeader[16]
	descHeader.TTL = rawHeader[17]
	descHeader.Hops = rawHeader[18]
	copy(descHeader.PayloadLen[:], rawHeader[19:])
}

func Parse(rawHeader []byte) (*DescHeader, error) {
	descHeader := new(DescHeader)
	err := parse(rawHeader, descHeader)
	return descHeader, err
}

func (descHeader *DescHeader) Parse(rawHeader []byte) error {
	err := parse(rawHeader, descHeader)
	return err
}
